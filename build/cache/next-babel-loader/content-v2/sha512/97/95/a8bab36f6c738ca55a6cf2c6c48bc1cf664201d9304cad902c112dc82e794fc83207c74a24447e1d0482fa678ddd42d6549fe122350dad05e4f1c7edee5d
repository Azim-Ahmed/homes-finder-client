{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport Head from 'next/head';\nimport { useContext, useEffect, useRef, useState } from 'react';\nimport AboutUs from '../Components/AboutUs';\nimport Banner from '../Components/Banner';\nimport ContactUs from '../Components/ContactUs';\nimport Header from '../Components/Header';\nimport Layout from '../Components/Layout';\nimport ServicesFirst from '../Components/ServicesFirst';\nimport MapSection from '../Components/MapSection';\nimport styles from '../styles/Home.module.css';\nimport Footer from '../Components/Footer';\nimport Loader from '../Components/Loader';\nimport { UserContext } from './_app';\nexport default function Home({\n  service\n}) {\n  // const { appData, setAppData } = useContext(UserContext);\n  const {\n    0: backgorundAbout,\n    1: setBackgroundAbout\n  } = useState('PrimaryBackground');\n  const navRef = useRef();\n  navRef.current = backgorundAbout;\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setBackgroundAbout('grayShade');\n    }, 5000);\n    return () => clearInterval(interval);\n  }, []);\n  return /*#__PURE__*/_jsxs(\"div\", {\n    className: styles[navRef.current],\n    children: [/*#__PURE__*/_jsxs(Head, {\n      children: [/*#__PURE__*/_jsx(\"title\", {\n        children: \"Vega Home\"\n      }), /*#__PURE__*/_jsx(\"link\", {\n        rel: \"icon\",\n        href: \"/logo.png\"\n      })]\n    }), /*#__PURE__*/_jsx(Header, {}), /*#__PURE__*/_jsx(Banner, {}), /*#__PURE__*/_jsx(AboutUs, {}), /*#__PURE__*/_jsx(ServicesFirst, {\n      service: service\n    }), /*#__PURE__*/_jsx(ContactUs, {}), /*#__PURE__*/_jsx(MapSection, {}), /*#__PURE__*/_jsx(Footer, {}), /*#__PURE__*/_jsx(\"footer\", {\n      className: styles.footer\n    })]\n  });\n}\nexport const getStaticProps = async context => {\n  const res = await fetch('http://localhost:2000/api/services/getAllServices');\n  const service = await res.json();\n\n  if (!service.service) {\n    return {\n      notFound: true\n    };\n  } else {\n    return {\n      props: {\n        service\n      },\n      revalidate: 10\n    };\n  }\n};","map":null,"metadata":{},"sourceType":"module"}