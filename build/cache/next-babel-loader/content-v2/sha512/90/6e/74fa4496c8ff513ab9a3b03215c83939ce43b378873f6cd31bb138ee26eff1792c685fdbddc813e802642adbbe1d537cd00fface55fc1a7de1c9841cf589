{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useContext, useEffect, useState } from 'react';\nimport { Col, Container, Row, Button } from 'react-bootstrap';\nimport { UserContext } from './_app';\nimport Link from 'next/link';\nimport styles from '../styles/login.module.css';\nimport firebase from 'firebase/app';\nimport 'firebase/auth';\nimport firebaseConfig from '../firebase.config';\nimport { useRouter } from 'next/router';\nimport Image from 'next/image';\n\nconst Login = () => {\n  const router = useRouter();\n  const dashboardSection = '/dashboard/home';\n  const loginSection = '/login';\n  const {\n    0: appData,\n    1: setAppData,\n    2: loggedIn,\n    3: setLoggedIn\n  } = useContext(UserContext);\n  const {\n    0: userData,\n    1: setUserData\n  } = useState({\n    email: '',\n    name: ''\n  });\n  const {\n    0: adminEmails,\n    1: setAdminEmails\n  } = useState(null);\n  const {\n    0: admin,\n    1: setAdmin\n  } = useState(false);\n\n  if (firebase.apps.length === 0) {\n    firebase.initializeApp(firebaseConfig);\n  }\n\n  useEffect(async () => {\n    let response = await fetch('http://localhost:2000/api/admin/getAllAdmins');\n    response = await response.json();\n    setAdminEmails(response.email);\n  }, []);\n  console.log(adminEmails); // localStorage.setItem('_increment', JSON.stringify(appData));\n  // }, []);\n\n  const handleGoogleSignIn = () => {\n    var provider = new firebase.auth.GoogleAuthProvider();\n    firebase.auth().signInWithPopup(provider).then(async function (result) {\n      const {\n        displayName,\n        email\n      } = await result.user;\n      const loggedInUser = {\n        name: displayName,\n        email\n      }; //localStorage.setItem('data', loggedInUser);\n\n      setUserData(_objectSpread(_objectSpread({}, loggedInUser), {}, {\n        name: displayName,\n        email: email\n      })); //localStorage.setItem('data', loggedInUser);\n      // window.store = loggedInUser;\n\n      console.log(loggedInUser);\n      console.log(userData);\n      let adminEmail = adminEmails.filter(data => data.email == loggedInUser.email);\n      console.log(adminEmail);\n\n      if (!adminEmail[0].email) {\n        setAdmin(false);\n        router.push(loginSection);\n      }\n\n      if (adminEmail[0].email) {\n        setAdmin(true);\n        router.push(dashboardSection);\n      } // if (typeof window !== 'undefined') {\n      //   localStorage.setItem(data, loggedInUser);\n      // }\n\n    }).catch(function (error) {\n      var errorCode = error.code;\n      var errorMessage = error.message;\n      var email = error.email;\n      var credential = error.credential;\n      console.log(errorCode, email, credential, errorMessage);\n    });\n  };\n\n  return /*#__PURE__*/_jsx(Container, {\n    children: /*#__PURE__*/_jsx(Row, {\n      className: \"my-5 text-center\",\n      children: /*#__PURE__*/_jsxs(Col, {\n        className: styles.authSection,\n        md: {\n          span: 6,\n          offset: 3\n        },\n        sm: {\n          span: 12\n        },\n        children: [/*#__PURE__*/_jsx(Link, {\n          href: \"/\",\n          children: /*#__PURE__*/_jsxs(\"a\", {\n            children: [' ', /*#__PURE__*/_jsx(Image, {\n              src: \"/favicon.png\",\n              width: 300,\n              height: 100,\n              alt: \"logo image\"\n            })]\n          })\n        }), /*#__PURE__*/_jsx(\"div\", {\n          className: styles.googleAuthSection,\n          children: /*#__PURE__*/_jsx(Button, {\n            variant: \"outline-danger\",\n            onClick: handleGoogleSignIn,\n            children: \"Continue With google\"\n          })\n        })]\n      })\n    })\n  });\n};\n\nexport default Login; // export async function getServerSideProps() {\n//   const res = await fetch('');\n//   const getAdminEmail = await res.json();\n//   return {\n//     props: {\n//       getAdminEmail,\n//     },\n//   };\n// }","map":null,"metadata":{},"sourceType":"module"}