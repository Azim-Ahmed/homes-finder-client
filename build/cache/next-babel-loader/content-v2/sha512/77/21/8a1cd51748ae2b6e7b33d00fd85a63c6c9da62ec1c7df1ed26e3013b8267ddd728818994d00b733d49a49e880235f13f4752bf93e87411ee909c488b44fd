{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport { useState } from 'react';\nimport { useRouter } from 'next/router';\nimport { Button, Card, Col, Form, Row } from 'react-bootstrap';\nimport Layout from '../../Components/Layout';\nimport styles from '../../styles/singleService.module.css';\nimport Calendar from 'react-calendar';\nimport Link from 'next/link';\nimport Select from 'react-select';\nimport { api } from '../../urlConfig';\nimport { useForm } from 'react-hook-form';\nimport 'react-calendar/dist/Calendar.css';\n\nvar SingleService = function SingleService(_ref) {\n  var serviceData = _ref.serviceData;\n  var ParticularServiceData = serviceData.service;\n  var name = ParticularServiceData.name,\n      price = ParticularServiceData.price,\n      servicePicture = ParticularServiceData.servicePicture,\n      slug = ParticularServiceData.slug,\n      time = ParticularServiceData.time,\n      description = ParticularServiceData.description; //state of react Calendar\n\n  var _useState = useState(new Date()),\n      value = _useState[0],\n      onChange = _useState[1];\n\n  var dateData = value.toDateString(); //state of this component\n\n  var _useState2 = useState(null),\n      serviceTime = _useState2[0],\n      setServiceTime = _useState2[1];\n\n  var _useState3 = useState({}),\n      orderData = _useState3[0],\n      setOrderData = _useState3[1];\n\n  orderData.workTime = serviceTime;\n  orderData.workDate = dateData;\n  orderData.serviceName = name;\n  orderData.orderPrice = price;\n  orderData.orderDescription = description;\n  orderData.orderPicture = servicePicture;\n  orderData.time = time; //\n\n  console.log(orderData); //state of conditional form/ calendar rendereing\n\n  var _useState4 = useState(false),\n      next = _useState4[0],\n      setNext = _useState4[1];\n\n  var _useState5 = useState(false),\n      request = _useState5[0],\n      setRequest = _useState5[1]; //state of error or correct time\n\n\n  var _useState6 = useState(null),\n      nexty = _useState6[0],\n      setNexty = _useState6[1]; //Successful page condition\n\n\n  var _useState7 = useState(false),\n      success = _useState7[0],\n      setSuccess = _useState7[1]; //next button function\n\n\n  var formRenderSectionByNextButton = function formRenderSectionByNextButton() {\n    if (!serviceTime) {\n      setNext(false);\n      setNexty( /*#__PURE__*/_jsx(\"p\", {\n        className: \"text-danger\",\n        children: \"Please Select the time\"\n      }));\n    } else {\n      setNext(true);\n    }\n  }; //Request To book button onClick Function\n\n\n  var RequestToBookForApproval = function RequestToBookForApproval() {\n    if (!orderData.name && !orderData.email) {\n      setNexty( /*#__PURE__*/_jsx(\"p\", {\n        className: \"text-danger\",\n        children: \"Please Fill the Data Correctly\"\n      }));\n    } else {\n      fetch(\"\".concat(api, \"/order/create\"), {\n        method: 'POST',\n        headers: {\n          'content-type': 'application/json'\n        },\n        body: JSON.stringify(orderData)\n      }).then(function (res) {\n        return res.json();\n      }).then(function (result) {\n        //alert('One Service Item Added');\n        setSuccess(true);\n      });\n    }\n  };\n\n  var optionsMorning = [{\n    value: '9:00 am',\n    label: '9:00 am'\n  }, {\n    value: '9:30 am',\n    label: '9:30 am'\n  }, {\n    value: '10:00 am',\n    label: '10:00 am'\n  }, {\n    value: '10:30 am',\n    label: '10:30 am'\n  }, {\n    value: '11:00 am',\n    label: '11:00 am'\n  }, {\n    value: '11:30 am',\n    label: '11:30 am'\n  }];\n  var optionsAfternoon = [{\n    value: '12:00 pm',\n    label: '12:00 pm'\n  }, {\n    value: '12:30 pm',\n    label: '12:30 pm'\n  }, {\n    value: '1:00 pm',\n    label: '1:00 pm'\n  }, {\n    value: '1:30 pm',\n    label: '1:30 pm'\n  }, {\n    value: '2:00 pm',\n    label: '2:00 pm'\n  }, {\n    value: '2:30 pm',\n    label: '2:30 pm'\n  }, {\n    value: '3:00 pm',\n    label: '3:00 pm'\n  }, {\n    value: '3:30 pm',\n    label: '3:30 pm'\n  }, {\n    value: '4:30 pm',\n    label: '4:30 pm'\n  }];\n  var optionsEvening = [{\n    value: '5:00 am',\n    label: '5:00 am'\n  }]; //react-select timeSection\n\n  var handleTimeChange = function handleTimeChange(select) {\n    setServiceTime(select.value);\n  };\n\n  var router = useRouter(); //render form\n\n  var _useForm = useForm(),\n      register = _useForm.register,\n      handleSubmit = _useForm.handleSubmit,\n      errors = _useForm.errors,\n      reset = _useForm.reset;\n\n  var onSubmit = function onSubmit(data) {\n    setRequest(true);\n    setOrderData(data);\n    reset();\n  }; //render time and date(calendar and time components)\n\n\n  var renderDateAndTime = function renderDateAndTime() {\n    return /*#__PURE__*/_jsxs(Col, {\n      md: {\n        span: 6,\n        offset: 1\n      },\n      children: [/*#__PURE__*/_jsx(Row, {\n        children: /*#__PURE__*/_jsx(Col, {\n          children: /*#__PURE__*/_jsx(Calendar, {\n            className: styles.CalendarSection,\n            onChange: onChange,\n            value: value\n          })\n        })\n      }), /*#__PURE__*/_jsx(Row, {\n        children: /*#__PURE__*/_jsx(Col, {\n          className: \"mt-4\",\n          children: /*#__PURE__*/_jsxs(Row, {\n            children: [/*#__PURE__*/_jsxs(Col, {\n              children: [' ', /*#__PURE__*/_jsx(Select, {\n                instanceId: \"Morning\",\n                autoFocus: true,\n                onChange: handleTimeChange,\n                options: optionsMorning,\n                placeholder: \"Morning\"\n              })]\n            }), /*#__PURE__*/_jsxs(Col, {\n              children: [' ', /*#__PURE__*/_jsx(Select, {\n                instanceId: \"Afternoon\",\n                autoFocus: true,\n                onChange: handleTimeChange,\n                options: optionsAfternoon,\n                placeholder: \"Afternoon\"\n              })]\n            }), /*#__PURE__*/_jsxs(Col, {\n              children: [' ', /*#__PURE__*/_jsx(Select, {\n                instanceId: \"Evening\",\n                autoFocus: true,\n                onChange: handleTimeChange,\n                options: optionsEvening,\n                placeholder: \"Evening\"\n              })]\n            })]\n          })\n        })\n      })]\n    });\n  }; //react hook form to get data\n\n\n  var renderHookForm = function renderHookForm() {\n    return /*#__PURE__*/_jsx(Col, {\n      md: {\n        span: 6,\n        offset: 1\n      },\n      children: /*#__PURE__*/_jsxs(Form, {\n        onSubmit: handleSubmit(onSubmit),\n        children: [/*#__PURE__*/_jsxs(Form.Group, {\n          controlId: \"name\",\n          children: [/*#__PURE__*/_jsx(Form.Control, {\n            type: \"text\",\n            name: \"name\",\n            placeholder: \"*Name\",\n            ref: register({\n              required: true\n            })\n          }), errors.name && /*#__PURE__*/_jsx(\"small\", {\n            className: \"text-danger form-text\",\n            children: \"Please enter name\"\n          })]\n        }), /*#__PURE__*/_jsxs(Form.Group, {\n          controlId: \"email\",\n          children: [/*#__PURE__*/_jsx(Form.Control, {\n            type: \"text\",\n            name: \"email\",\n            placeholder: \"*Email Address\",\n            ref: register({\n              required: true,\n              pattern: /^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\\.[a-zA-Z0-9-.]+$/\n            })\n          }), errors.email && /*#__PURE__*/_jsx(\"small\", {\n            className: \"text-danger form-text\",\n            children: \"Please enter a valid Email-ID\"\n          })]\n        }), /*#__PURE__*/_jsxs(Form.Group, {\n          controlId: \"phoneNumber\",\n          children: [/*#__PURE__*/_jsx(Form.Control, {\n            type: \"phone\",\n            name: \"phoneNumber\",\n            placeholder: \"*Phone Number\",\n            ref: register({\n              required: true\n            })\n          }), errors.phoneNumber && /*#__PURE__*/_jsx(\"small\", {\n            className: \"text-danger form-text\",\n            children: \"Please enter a valid Phone Number\"\n          })]\n        }), /*#__PURE__*/_jsxs(Row, {\n          children: [/*#__PURE__*/_jsxs(Col, {\n            children: [' ', /*#__PURE__*/_jsxs(Form.Group, {\n              controlId: \"street\",\n              children: [/*#__PURE__*/_jsx(Form.Control, {\n                type: \"text\",\n                name: \"street\",\n                placeholder: \"*Street\",\n                ref: register({\n                  required: true\n                })\n              }), errors.street && /*#__PURE__*/_jsx(\"small\", {\n                className: \"text-danger form-text\",\n                children: \"Please enter a valid street\"\n              })]\n            })]\n          }), /*#__PURE__*/_jsxs(Col, {\n            children: [' ', /*#__PURE__*/_jsx(Form.Group, {\n              controlId: \"phoneNumber\",\n              children: /*#__PURE__*/_jsx(Form.Control, {\n                type: \"text\",\n                name: \"floor\",\n                placeholder: \"Apt/Floor No.\",\n                ref: register({\n                  required: false\n                })\n              })\n            })]\n          })]\n        }), /*#__PURE__*/_jsxs(Row, {\n          children: [/*#__PURE__*/_jsxs(Col, {\n            children: [' ', /*#__PURE__*/_jsxs(Form.Group, {\n              controlId: \"city\",\n              children: [/*#__PURE__*/_jsx(Form.Control, {\n                type: \"text\",\n                name: \"city\",\n                placeholder: \"*City\",\n                ref: register({\n                  required: true\n                })\n              }), errors.city && /*#__PURE__*/_jsx(\"small\", {\n                className: \"text-danger form-text\",\n                children: \"Please enter your city\"\n              })]\n            })]\n          }), /*#__PURE__*/_jsxs(Col, {\n            children: [' ', /*#__PURE__*/_jsx(Form.Group, {\n              controlId: \"state\",\n              children: /*#__PURE__*/_jsx(Form.Control, {\n                type: \"text\",\n                name: \"state\",\n                placeholder: \"State\",\n                ref: register({\n                  required: false\n                })\n              })\n            })]\n          })]\n        }), /*#__PURE__*/_jsx(Form.Group, {\n          controlId: \"message\",\n          children: /*#__PURE__*/_jsx(Form.Control, {\n            type: \"text\",\n            name: \"message\",\n            placeholder: \"Add your Message\",\n            ref: register({\n              required: false\n            })\n          })\n        }), /*#__PURE__*/_jsx(\"small\", {\n          className: \"text-muted\",\n          children: \"*Required Info\"\n        }), /*#__PURE__*/_jsx(Button, {\n          className: styles.submitButtonStyle,\n          block: true,\n          type: \"submit\",\n          children: \"Register\"\n        })]\n      })\n    });\n  }; //successFul page Component\n\n\n  var renderSuccessfulPage = function renderSuccessfulPage() {\n    return /*#__PURE__*/_jsx(Row, {\n      children: /*#__PURE__*/_jsxs(Col, {\n        children: [/*#__PURE__*/_jsx(\"div\", {\n          style: {\n            height: '100vh',\n            backgroundPosition: 'center',\n            backgroundRepeat: 'no-repeat',\n            backgroundSize: 'cover',\n            backgroundImage: \"url($\".concat(orderData.orderPicture, \")\")\n          }\n        }), /*#__PURE__*/_jsx(\"div\", {\n          className: \"\".concat(styles.bgText, \" text-justify\"),\n          children: \"Order Success\"\n        })]\n      })\n    });\n  }; //main Component\n\n\n  return /*#__PURE__*/_jsxs(Layout, {\n    children: [success ? renderSuccessfulPage() : /*#__PURE__*/_jsxs(_Fragment, {\n      children: [/*#__PURE__*/_jsx(Row, {\n        className: \"text-center mt-4\",\n        children: /*#__PURE__*/_jsxs(Col, {\n          md: {\n            span: 6,\n            offset: 3\n          },\n          children: [next && /*#__PURE__*/_jsxs(\"div\", {\n            className: \"jsx-2499086583\" + \" \" + \"text-center\",\n            children: [' ', /*#__PURE__*/_jsx(\"h1\", {\n              className: \"jsx-2499086583\",\n              children: \"Add Your Info\"\n            }), /*#__PURE__*/_jsx(\"p\", {\n              className: \"jsx-2499086583\",\n              children: \"Tell us a bit about yourself\"\n            })]\n          }), !next && /*#__PURE__*/_jsxs(\"h1\", {\n            className: \"jsx-2499086583\" + \" \" + \"text-white text-justify  my-5 py-5\",\n            children: [' ', \"Schedule Online\"]\n          })]\n        })\n      }), /*#__PURE__*/_jsxs(Row, {\n        className: \"text-center mt-4\",\n        children: [!next && renderDateAndTime(), next && renderHookForm(), /*#__PURE__*/_jsx(Col, {\n          md: 4,\n          className: \"mt-5\",\n          children: /*#__PURE__*/_jsx(\"div\", {\n            id: \"wrapper\",\n            className: \"jsx-2499086583\",\n            children: /*#__PURE__*/_jsx(\"div\", {\n              id: \"sticky\",\n              className: \"jsx-2499086583\",\n              children: /*#__PURE__*/_jsx(Card, {\n                className: styles.cardbackgroundForm,\n                children: /*#__PURE__*/_jsxs(Card.Body, {\n                  children: [/*#__PURE__*/_jsx(Card.Title, {\n                    className: styles.cardTitileBorder,\n                    children: ParticularServiceData.name\n                  }), /*#__PURE__*/_jsx(Card.Text, {\n                    children: dateData\n                  }), /*#__PURE__*/_jsx(Card.Text, {\n                    children: serviceTime\n                  }), request ? /*#__PURE__*/_jsx(Button, {\n                    block: true,\n                    size: \"lg\",\n                    className: \"py-2 my-3\",\n                    variant: \"outline-info\",\n                    onClick: RequestToBookForApproval,\n                    children: \"Request\"\n                  }) : /*#__PURE__*/_jsx(Button, {\n                    block: true,\n                    size: \"lg\",\n                    className: \"py-2 my-3\",\n                    variant: \"outline-info\",\n                    onClick: formRenderSectionByNextButton,\n                    children: \"Next\"\n                  }), serviceTime ? '' : nexty]\n                })\n              })\n            })\n          })\n        })]\n      }), /*#__PURE__*/_jsx(Row, {\n        children: /*#__PURE__*/_jsx(Col, {\n          md: {\n            span: 8,\n            offset: 2\n          }\n        })\n      })]\n    }), /*#__PURE__*/_jsx(_JSXStyle, {\n      id: \"2499086583\",\n      children: [\"#sticky.jsx-2499086583{position:-webkit-sticky;position:sticky;position:-webkit-sticky;width:100%;height:auto;top:70px;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;box-shadow:0 0 7px gray;color:#000;}\", \"#wrapper.jsx-2499086583{width:17rem;margin:auto;}\", \"#wrapper.jsx-2499086583{height:700px;}\", \"h4.jsx-2499086583{text-align:center;color:white;}\", \"@media (min-height:768px){#wrapper.jsx-2499086583{height:2000px;}}\"]\n    })]\n  });\n};\n\nexport var __N_SSG = true;\nexport default SingleService; //getStatic props Section","map":null,"metadata":{},"sourceType":"module"}